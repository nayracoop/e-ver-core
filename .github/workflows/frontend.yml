name: Frontend CI CD

on:
  push:
    branches: master
    paths-ignore:
      - 'server/**'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js 12.x
      uses: actions/setup-node@v1
      with:
        node-version: 12.x

    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - run: npm ci
    - run: npm run build --if-present

    - name: Copy ecosystem and restart file via SCP
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.SCP_HOST }}
        username: ${{ secrets.SCP_USERNAME }}
        password: ${{ secrets.SCP_PASSWORD }}
        port: ${{ secrets.SCP_PORT }}
        source: "ecosystem.config.yml,restart.sh"
        target: "/var/www/develop/demo.e-ver"

    - name: Copy build folder via SCP
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.SCP_HOST }}
        username: ${{ secrets.SCP_USERNAME }}
        password: ${{ secrets.SCP_PASSWORD }}
        port: ${{ secrets.SCP_PORT }}
        source: "build"
        target: "/var/www/develop/demo.e-ver/front"
        strip_components: 1

    - name: Restart pm2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SCP_HOST }}
        username: ${{ secrets.SCP_USERNAME }}
        password: ${{ secrets.SCP_PASSWORD }}
        port: ${{ secrets.SCP_PORT }}
        script: |
          cd /var/www/develop/demo.e-ver
          . restart.sh front-ever
